// <auto-generated />
using System;
using DeploymentTrackerCore.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeploymentTrackerCore.Migrations
{
    [DbContext(typeof(DeploymentAppContext))]
    partial class DeploymentAppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.7");

            modelBuilder.Entity("DeploymentTrackerCore.Models.Entities.Deployment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<int?>("DeployedEnvironmentId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DeploymentCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PublicURL")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(150);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("TypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DeployedEnvironmentId");

                    b.HasIndex("TypeId");

                    b.ToTable("Deployments");
                });

            modelBuilder.Entity("DeploymentTrackerCore.Models.Entities.DeploymentEnvironment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HostName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.ToTable("Environments");
                });

            modelBuilder.Entity("DeploymentTrackerCore.Models.Entities.DeploymentNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<int>("DeploymentId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("DeploymentId");

                    b.ToTable("DeploymentNote");
                });

            modelBuilder.Entity("DeploymentTrackerCore.Models.Entities.Type", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeploymentTemplate")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<string>("TeardownTemplate")
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Types");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Default"
                        });
                });

            modelBuilder.Entity("DeploymentTrackerCore.Models.Entities.Deployment", b =>
                {
                    b.HasOne("DeploymentTrackerCore.Models.Entities.DeploymentEnvironment", "DeployedEnvironment")
                        .WithMany("Deployments")
                        .HasForeignKey("DeployedEnvironmentId");

                    b.HasOne("DeploymentTrackerCore.Models.Entities.Type", "Type")
                        .WithMany("Deployments")
                        .HasForeignKey("TypeId");

                    b.OwnsOne("DeploymentTrackerCore.Models.Entities.AuditDetail", "CreatedBy", b1 =>
                        {
                            b1.Property<int>("DeploymentId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(150);

                            b1.Property<DateTime>("Timestamp")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(50);

                            b1.HasKey("DeploymentId");

                            b1.ToTable("Deployments");

                            b1.WithOwner()
                                .HasForeignKey("DeploymentId");
                        });

                    b.OwnsOne("DeploymentTrackerCore.Models.Entities.AuditDetail", "ModifiedBy", b1 =>
                        {
                            b1.Property<int>("DeploymentId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(150);

                            b1.Property<DateTime>("Timestamp")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(50);

                            b1.HasKey("DeploymentId");

                            b1.ToTable("Deployments");

                            b1.WithOwner()
                                .HasForeignKey("DeploymentId");
                        });

                    b.OwnsOne("DeploymentTrackerCore.Models.Entities.Login", "SiteLogin", b1 =>
                        {
                            b1.Property<int>("DeploymentId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Password")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .HasColumnType("TEXT");

                            b1.HasKey("DeploymentId");

                            b1.ToTable("Deployments");

                            b1.WithOwner()
                                .HasForeignKey("DeploymentId");
                        });
                });

            modelBuilder.Entity("DeploymentTrackerCore.Models.Entities.DeploymentNote", b =>
                {
                    b.HasOne("DeploymentTrackerCore.Models.Entities.Deployment", "Deployment")
                        .WithMany("DeploymentNotes")
                        .HasForeignKey("DeploymentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("DeploymentTrackerCore.Models.Entities.AuditDetail", "CreatedBy", b1 =>
                        {
                            b1.Property<int>("DeploymentNoteId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(150);

                            b1.Property<DateTime>("Timestamp")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(50);

                            b1.HasKey("DeploymentNoteId");

                            b1.ToTable("DeploymentNote");

                            b1.WithOwner()
                                .HasForeignKey("DeploymentNoteId");
                        });

                    b.OwnsOne("DeploymentTrackerCore.Models.Entities.AuditDetail", "ModifiedBy", b1 =>
                        {
                            b1.Property<int>("DeploymentNoteId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(150);

                            b1.Property<DateTime>("Timestamp")
                                .HasColumnType("TEXT");

                            b1.Property<string>("UserName")
                                .IsRequired()
                                .HasColumnType("TEXT")
                                .HasMaxLength(50);

                            b1.HasKey("DeploymentNoteId");

                            b1.ToTable("DeploymentNote");

                            b1.WithOwner()
                                .HasForeignKey("DeploymentNoteId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
